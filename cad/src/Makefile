# Makefile.in generated by automake 1.10 from Makefile.am.
# cad/src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



pkgdatadir = $(datadir)/NanoEngineer
pkglibdir = $(libdir)/NanoEngineer
pkgincludedir = $(includedir)/NanoEngineer
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin10.5.0
host_triplet = i386-apple-darwin10.5.0
subdir = cad/src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in INSTALL
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_cppunit.m4 \
	$(top_srcdir)/m4/ac_ctypes.m4 \
	$(top_srcdir)/m4/ac_freezepython.m4 \
	$(top_srcdir)/m4/ac_numarray.m4 $(top_srcdir)/m4/ac_numpy.m4 \
	$(top_srcdir)/m4/ac_pil.m4 $(top_srcdir)/m4/ac_pkg.m4 \
	$(top_srcdir)/m4/ac_pyopengl.m4 $(top_srcdir)/m4/ac_pyqt.m4 \
	$(top_srcdir)/m4/ac_qt4.m4 $(top_srcdir)/m4/ac_utils.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
SOURCES =
DIST_SOURCES =
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/irix/projects/nanoinventor-nativeosx/missing --run aclocal-1.10
AMTAR = ${SHELL} /Users/irix/projects/nanoinventor-nativeosx/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /Users/irix/projects/nanoinventor-nativeosx/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/irix/projects/nanoinventor-nativeosx/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/irix/projects/nanoinventor-nativeosx/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CHECK_VERSION_RESULT = 1
CPP = gcc -E
CPPFLAGS = 
CPPUNIT_CFLAGS = 
CPPUNIT_CONFIG_SCRIPT = 
CPPUNIT_LIBS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
FREEZEPYTHON = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/libexec/gcc/i686-apple-darwin10/4.2.1/ld
LDFLAGS = 
LIBOBJS = 
LIBS =  -framework ApplicationServices -framework Carbon -framework AppKit  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/irix/projects/nanoinventor-nativeosx/missing --run makeinfo
MKDIR_P = ../.././install-sh -c -d
MOC4 = /usr/bin/moc
NM = /usr/bin/nm
NMEDIT = nmedit
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = NanoEngineer
PACKAGE_BUGREPORT = support@nanorex.com
PACKAGE_NAME = NanoEngineer
PACKAGE_STRING = NanoEngineer 1_0.9.2
PACKAGE_TARNAME = NanoEngineer
PACKAGE_VERSION = 1_0.9.2
PATH_SEPARATOR = :
PKG_CONFIG = /opt/local/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = :/Users/irix/projects/nanoinventor-nativeosx/pkg-conf
PYREXC = /usr/local/bin/pyrexc
PYTHON = /usr/bin/python
PYTHON_BASE = /usr
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = darwin
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.6
QT4DIR = 
QT4_CORE_CFLAGS = -DQT_SHARED -I/opt/local/include -I/opt/local/include/QtCore  
QT4_CORE_INCLUDES = -DQT_SHARED -I/opt/local/include -I/opt/local/include/QtCore  
QT4_CORE_LDFLAGS = -L/opt/local/lib  
QT4_CORE_LIB = -lQtCore -lz -lm  
QT4_CORE_LIBS = -framework ApplicationServices -L/opt/local/lib -lQtCore -lz -lm  
QT4_CPPFLAGS = -DQT_CLEAN_NAMESPACE -DQT_GENUINE_STR -DQT_NO_STL -DQT_NO_KEYWORDS
QT4_FRONTEND_CFLAGS = -DQT_SHARED -I/opt/local/include -I/opt/local/include/QtCore -I/opt/local/include/QtGui  
QT4_FRONTEND_LIBS = -framework ApplicationServices -framework Carbon -framework AppKit -L/opt/local/lib -lQtGui -lpng -lQtCore -lz -lm  
QT4_INCLUDES = -DQT_SHARED -I/opt/local/include -I/opt/local/include/QtCore -I/opt/local/include/QtGui  
QT4_LDFLAGS = -L/opt/local/lib  
QT4_LIB = -lQtGui -lpng -lQtCore -lz -lm  
QT4_VERSION = 4.7.1
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRICT_LIBRARY_CHECK = no
STRIP = strip
UIC4 = /usr/bin/uic
UNAME_A = Darwin muon 10.5.0 Darwin Kernel Version 10.5.0: Fri Nov  5 23:20:39 PDT 2010; root:xnu-1504.9.17~1/RELEASE_I386 i386
VERSION = 1_0.9.2
abs_builddir = /Users/irix/projects/nanoinventor-nativeosx/cad/src
abs_srcdir = /Users/irix/projects/nanoinventor-nativeosx/cad/src
abs_top_builddir = /Users/irix/projects/nanoinventor-nativeosx
abs_top_srcdir = /Users/irix/projects/nanoinventor-nativeosx
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i386-apple-darwin10.5.0
build_alias = 
build_cpu = i386
build_os = darwin10.5.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i386-apple-darwin10.5.0
host_alias = 
host_cpu = i386
host_os = darwin10.5.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /Users/irix/projects/nanoinventor-nativeosx/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = /bin/echo
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/./install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/NanoEngineer
pkgpythondir = ${pythondir}/NanoEngineer
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.6/site-packages
pythondir = ${prefix}/lib/python2.6/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ../..
top_srcdir = ../..
EXTRA_DIST = ReadMe.html rungms
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  cad/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  cad/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-exec-am install-strip

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	dist-hook distclean distclean-generic distclean-libtool \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-exec-hook \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-generic mostlyclean-libtool pdf pdf-am \
	ps ps-am uninstall uninstall-am


all:
#	@echo Freezing NanoEngineer-1...
#		$(FREEZEPYTHON) --install-dir dist --target-name=NanoEngineer-1 \
#			--include-modules sip,dbhash main.py
	@echo Byte-compiling NanoEngineer-1...
	python -c "import compileall; compileall.compile_dir('.')"

install-exec-hook:
	mkdir -p $(bindir)/NanoEngineer-$(PACKAGE_VERSION).app/program

#	@echo Installing the frozen NanoEngineer-1...
#	cp -r dist/* $(bindir)/NanoEngineer-$(PACKAGE_VERSION).app/program/
#	echo '#!/bin/sh' > $(bindir)/NanoEngineer-$(PACKAGE_VERSION)
#	echo $(bindir)/NanoEngineer-$(PACKAGE_VERSION).app/program/NanoEngineer-1 >> $(bindir)/NanoEngineer-$(PACKAGE_VERSION)
	@echo Installing byte-compiled NanoEngineer-1...
	cp *.pyc $(bindir)/NanoEngineer-$(PACKAGE_VERSION).app/program/
	mkdir -p $(bindir)/NanoEngineer-$(PACKAGE_VERSION).app/program/exprs
	cp exprs/*.pyc $(bindir)/NanoEngineer-$(PACKAGE_VERSION).app/program/exprs/
	mkdir -p $(bindir)/NanoEngineer-$(PACKAGE_VERSION).app/program/PM
	cp PM/*.pyc $(bindir)/NanoEngineer-$(PACKAGE_VERSION).app/program/PM/
	echo '#!/bin/sh' > $(bindir)/NanoEngineer-$(PACKAGE_VERSION)
	echo python $(bindir)/NanoEngineer-$(PACKAGE_VERSION).app/program/main.pyc >> $(bindir)/NanoEngineer-$(PACKAGE_VERSION)
	chmod 755 $(bindir)/NanoEngineer-$(PACKAGE_VERSION)
	pushd $(bindir) && rm -f NanoEngineer-1
	pushd $(bindir) && ln -s NanoEngineer-$(PACKAGE_VERSION) NanoEngineer-1
#	rm -f $(bindir)/NanoEngineer-1
#	ln -s $(bindir)/NanoEngineer-$(PACKAGE_VERSION) $(bindir)/NanoEngineer-1

	@echo Copying the GAMESS helper script...
	mkdir -p $(bindir)/NanoEngineer-$(PACKAGE_VERSION).app/bin
	cp rungms $(bindir)/NanoEngineer-$(PACKAGE_VERSION).app/bin/

	@echo Copying images...
	mkdir -p $(bindir)/NanoEngineer-$(PACKAGE_VERSION).app/src
	cp -R ui $(bindir)/NanoEngineer-$(PACKAGE_VERSION).app/src/

	@echo Copying ReadMe.html...
	mkdir -p $(pkgdatadir)-$(PACKAGE_VERSION)
	cp ReadMe.html $(pkgdatadir)-$(PACKAGE_VERSION)/

dist-hook:
	cp -R *.py $(distdir)/
	cp -R exprs $(distdir)/
	cp -R PM $(distdir)/
	mkdir -p $(distdir)/ui/actions
	cp -R ui/actions/Edit $(distdir)/ui/actions/
	cp -R ui/actions/File $(distdir)/ui/actions/
	cp -R ui/actions/Help $(distdir)/ui/actions/
	cp -R ui/actions/Insert $(distdir)/ui/actions/
	cp -R ui/actions/Properties\ Manager $(distdir)/ui/actions/
	cp -R ui/actions/Simulation $(distdir)/ui/actions/
	cp -R ui/actions/Toolbars $(distdir)/ui/actions/
	cp -R ui/actions/Tools $(distdir)/ui/actions/
	cp -R ui/actions/View $(distdir)/ui/actions/
	cp -R ui/border $(distdir)/ui/
	cp -R ui/confcorner $(distdir)/ui/
	cp -R ui/cursors $(distdir)/ui/
	cp -R ui/dialogs $(distdir)/ui/
	cp -R ui/exprs $(distdir)/ui/
	cp -R ui/images $(distdir)/ui/
	cp -R ui/modeltree $(distdir)/ui/
	rm -rf `find $(distdir) -name .svn`
	rm -rf $(distdir)/*/.svn
	rm -rf $(distdir)/*/*/.svn
	rm -rf $(distdir)/*/*/*/.svn
	rm -rf $(distdir)/*/*/*/*/.svn
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
